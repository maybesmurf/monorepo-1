version: "3"

services:
  postgres:
    container_name: postgres
    ports:
      - "5432:5432"
    image: postgres:alpine
    environment:
      - POSTGRES_USER=devUser
      - POSTGRES_PASSWORD=woofbark
      - POSTGRES_DB=prisma
    restart: always

  # Leaving out this container in favor of Prisma Studio
  # pgadmin:
  #   container_name: pgadmin
  #   ports:
  #     - "5050:80"
  #   image: dpage/pgadmin4:latest
  #   restart: always
  #   env_file:
  #     - .env

  firebase-emulators:
    container_name: firebase-emulators
    ports:
      - 4000:4000
      - 4001:4001
      - 4002:4002
    build:
      context: ./firebase-emulators
      dockerfile: Dockerfile
    image: firebase-emulator:firebase-emulator
    volumes:
      - ./firebase-emulators/firebase.json:/src/firebase.json
      - ./firebase-emulators/storage.rules:/src/storage.rules
      - ./firebase/seed:/src/firebase/seed
    command: firebase emulators:start --project dev

  api-builder:
    container_name: api-builder
    depends_on:
      - postgres
      - firebase-emulators
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api/package.json:/home/node/app/package.json
      - ./api/src:/home/node/app/src
      - ./api/build:/home/node/app/build
    command: npm run dev:watch

  api:
    container_name: api
    depends_on:
      - postgres
      - firebase-emulators
      - api-builder
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - 5000:5000
      - 5555:5555
    volumes:
      - ./api/build:/home/node/app/build
    environment:
      - ENVIRONMENT=development
      - POSTGRES_USER=devUser
      - POSTGRES_PASSWORD=woofbark
      - POSTGRES_DB=prisma
      - DATABASE_URL=postgres://devUser:woofbark@postgres:5432/prisma?schema=prisma
      - PGADMIN_DEFAULT_EMAIL=dev@example.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin
      - FIREBASE_AUTH_EMULATOR_HOST=firebase-emulators:4001
      - FIREBASE_STORAGE_EMULATOR_HOST=firebase-emulators:4002
      - SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}
      - SENTRY_DSN=${SENTRY_DSN}
    command: npm run dev

  api-jest:
    container_name: api-jest
    depends_on:
      - api
    build:
      context: ./api
      dockerfile: Dockerfile.jest
    volumes:
      - ./api/src:/src/src
      - ./api/package.json:/src/package.json
      - ./api/jest.config.js:/src/jest.config.js
      - ./api/.jest:/src/.jest
      - ./api/tsconfig.json:/src/tsconfig.json
      - ./api/babel.config.js:/src/babel.config.js
      - ./.git:/app/.git
    environment:
      - ENVIRONMENT=development
      - POSTGRES_USER=devUser
      - POSTGRES_PASSWORD=woofbark
      - POSTGRES_DB=prisma
      - DATABASE_URL=postgres://devUser:woofbark@postgres:5432/prisma?schema=prisma
      - PGADMIN_DEFAULT_EMAIL=dev@example.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin
      - FIREBASE_AUTH_EMULATOR_HOST=firebase-emulators:4001
      - FIREBASE_STORAGE_EMULATOR_HOST=firebase-emulators:4002
      - SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}
      - SENTRY_DSN=${SENTRY_DSN}
    command: npm run test
    tty: true
    stdin_open: false

  web:
    container_name: web
    depends_on:
      - postgres
      - firebase-emulators
    ports:
      - 3000:3000
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    volumes:
      - ./web/next-env.d.ts:/app/next-env.d.ts
      - ./web/next.config.js:/app/next.config.js
      - ./web/sentry.client.config.js:/app/sentry.client.config.js
      - ./web/sentry.server.config.js:/app/sentry.server.config.js
      - ./web/.babelrc:/app/.babelrc
      - ./web/tsconfig.json:/app/tsconfig.json
      - ./web/public:/app/public
      - ./web/src:/app/src
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgres://devUser:woofbark@postgres:5432/prisma?schema=prisma
      - FIREBASE_AUTH_EMULATOR_HOST=firebase-emulators:4001
      - FIREBASE_STORAGE_EMULATOR_HOST=firebase-emulators:4002
      - NEXT_PUBLIC_API_PATH=http://localhost:5000
      - NEXT_PUBLIC_ENVIRONMENT=development
      - NEXT_PUBLIC_SENTRY_DSN=${NEXT_PUBLIC_SENTRY_DSN}
      - SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}

  web-jest:
    container_name: web-jest
    depends_on:
      - web
    build:
      context: ./web
      dockerfile: Dockerfile.jest
    volumes:
      - ./web/next-env.d.ts:/src/next-env.d.ts
      - ./web/next.config.js:/src/next.config.js
      - ./web/sentry.client.config.js:/src/sentry.client.config.js
      - ./web/sentry.server.config.js:/src/sentry.server.config.js
      - ./web/.babelrc:/src/.babelrc
      - ./web/tsconfig.json:/src/tsconfig.json
      - ./web/public:/src/public
      - ./web/src:/src/src
      - ./web/jest.config.js:/src/jest.config.js
      - ./.git:/app/.git
    environment:
      - ENVIRONMENT=development
      - POSTGRES_USER=devUser
      - POSTGRES_PASSWORD=woofbark
      - POSTGRES_DB=prisma
      - DATABASE_URL=postgres://devUser:woofbark@postgres:5432/prisma?schema=prisma
      - PGADMIN_DEFAULT_EMAIL=dev@example.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin
      - FIREBASE_AUTH_EMULATOR_HOST=firebase-emulators:4001
      - FIREBASE_STORAGE_EMULATOR_HOST=firebase-emulators:4002
      - SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}
      - SENTRY_DSN=${SENTRY_DSN}
    command: npm run test
    tty: true
    stdin_open: false
