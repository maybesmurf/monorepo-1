name: Deploy Testing Environment and run E2E

on:
  pull_request:
    branches:
      - master

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        working-directory: /api
        run: npm install
      - name: Run unit tests
        working-directory: /api
        run: npm run ci:test

  build:
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: testing

      - name: Build and push api testing image
        uses: docker/build-push-action@v2
        with:
          context: ./api
          push: true
          tags: ghcr.io/${{github.repository}}/api:test-${{github.sha}}

      - name: Build and push web testing image
        uses: docker/build-push-action@v2
        with:
          context: ./web
          push: true
          tags: ghcr.io/${{github.repository}}/web:test-${{github.sha}}
          build-args: |
            ENVIRONMENT=testing
            SENTRY_AUTH_TOKEN=${{secrets.SENTRY_AUTH_TOKEN}}
            SENTRY_DSN=${{secrets.SENTRY_DSN}}
            NEXT_PUBLIC_ENVIRONMENT=testing
            NEXT_PUBLIC_SENTRY_DSN=${{secrets.SENTRY_DSN}}
            NEXT_PUBLIC_API_PATH=${{secrets.CI_NEXT_PUBLIC_API_PATH}}
          # NEXT_PUBLIC_GOOGLE_ANALYTICS=${{secrets.CI_NEXT_PUBLIC_GOOGLE_ANALYTICS}}
          # NEXT_PUBLIC_API_KEY=${{secrets.CI_NEXT_PUBLIC_API_KEY}}
          # FIREBASE_PROJECT_ID=${{secrets.CI_FIREBASE_PROJECT_ID}}
          # FIREBASE_AUTH_DOMAIN=${{secrets.CI_FIREBASE_AUTH_DOMAIN}}
          # FIREBASE_CLIENT_EMAIL=${{secrets.CI_FIREBASE_CLIENT_EMAIL}}
          # FIREBASE_MESSAGING_SENDER_ID=${{secrets.CI_FIREBASE_MESSAGING_SENDER_ID}}
          # FIREBASE_APP_ID=${{secrets.CI_FIREBASE_APP_ID}}
          # FIREBASE_MEASUREMENT_ID=${{secrets.CI_FIREBASE_MEASUREMENT_ID}}
          # FIREBASE_COOKIE_SECRET_PREVIOUS=${{secrets.CI_FIREBASE_COOKIE_SECRET_PREVIOUS}}
          # FIREBASE_COOKIE_SECRET_CURRENT=${{secrets.CI_FIREBASE_COOKIE_SECRET_CURRENT}}
          # GOOGLE_APPLICATION_CREDENTIALS=${{secrets.CI_GOOGLE_APPLICATION_CREDENTIALS}}

    # Just could not get these to work.
    # - name: Delete old api images
    #   uses: actions/delete-package-versions@v2
    #   with:
    #     package-name: "api"
    #     token: ${{secrets.GITHUB_TOKEN}}
    #     min-versions-to-keep: 3
    # - name: Delete old web images
    #   uses: actions/delete-package-versions@v2
    #   with:
    #     package-name: "web"
    #     token: ${{secrets.GITHUB_TOKEN}}
    #     min-versions-to-keep: 3

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Trigger api testing deployment to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DOKKU_HOST}}
          username: ${{secrets.DOKKU_SSH_USER}}
          key: "${{ secrets.DOKKU_SSH_PRIVATE_KEY }}"
          script: |
            dokku git:from-image test-api ghcr.io/${{github.repository}}/api:test-${{github.sha}}

      - name: Trigger web testing deployment to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DOKKU_HOST}}
          username: ${{secrets.DOKKU_SSH_USER}}
          key: "${{ secrets.DOKKU_SSH_PRIVATE_KEY }}"
          script: |
            dokku git:from-image test-web ghcr.io/${{github.repository}}/web:test-${{github.sha}}

  e2e:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cypress run
        uses: cypress-io/github-action@v2
